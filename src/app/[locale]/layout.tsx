import type { Metadata } from 'next';
import {notFound} from 'next/navigation';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { getMessages } from 'next-intl/server';
import { SignedIn, ClerkLoaded, ClerkLoading } from '@clerk/nextjs';
import { ThemeProvider } from '@/components/theme/ThemeProvider';
import { Content, Header, Wrapper } from '@/components/layout';
import { MobileSidebarProvider } from '@/components/layout/MobileSidebarContext';
import {routing} from '@/i18n/routing';
import DynamicSidebar from '@/components/layout/DynamicSidebar';
// ClerkProvider is provided at the root; localization is configured there.

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages();

  // Clerk localization is handled in the root layout based on NEXT_LOCALE cookie.

  return (
    <NextIntlClientProvider locale={locale} messages={messages}>
      <ThemeProvider>
        <MobileSidebarProvider>
          <Wrapper>
            <ClerkLoaded>
              <SignedIn>
                <DynamicSidebar />
              </SignedIn>
            </ClerkLoaded>
            <ClerkLoading>
              {/* Reserve sidebar width on desktop to avoid layout shift */}
              <div className="hidden md:block w-64 shrink-0 border-r border-border" />
            </ClerkLoading>
            <Content>
              <Header />
              {children}
            </Content>
          </Wrapper>
        </MobileSidebarProvider>
      </ThemeProvider>
    </NextIntlClientProvider>
  );
}
