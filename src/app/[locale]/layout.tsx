import type { Metadata } from 'next';
import {notFound} from 'next/navigation';
import { Geist, Geist_Mono } from 'next/font/google';
import '../globals.css';
import { NextIntlClientProvider, hasLocale } from 'next-intl';
import { getMessages, getTranslations } from 'next-intl/server';
import { ClerkProvider } from '@clerk/nextjs';
import { ThemeProvider } from '@/components/theme/ThemeProvider';
import { Content, Header, Sidebar, Wrapper } from '@/components/layout';
import { MobileSidebarProvider } from '@/components/layout/MobileSidebarContext';
import type { SidebarItem } from '@/components/layout/Sidebar';
import {
  Home,
  User,
  Settings,
  HelpCircle,
  LayoutDashboard,
} from "lucide-react";
import {routing} from '@/i18n/routing';

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  if (!hasLocale(routing.locales, locale)) {
    notFound();
  }

  const messages = await getMessages();

  const t = await getTranslations({ locale: locale, namespace: 'common' });

  const sidebarItems: SidebarItem[] = [
    {
      name: t('home'),
      href: '/',
      icon: <Home className="h-5 w-5" />,
    },
    {
      name: t('dashboard'),
      href: '/dashboard',
      icon: <LayoutDashboard className="h-5 w-5" />,
    },
    {
      name: t('users'),
      href: '/users',
      icon: <User className="h-5 w-5" />,
    },
    {
      name: t('settings'),
      href: '/settings',
      icon: <Settings className="h-5 w-5" />,
    },
    {
      name: t('help'),
      href: '/help',
      icon: <HelpCircle className="h-5 w-5" />,
    },
  ];

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ClerkProvider localization={{ locale }}>
          <NextIntlClientProvider locale={locale} messages={messages}>
            <ThemeProvider>
              <MobileSidebarProvider>
                <Wrapper>
                  <Sidebar sidebarItems={sidebarItems} />
                  <Content>
                    <Header />
                    {children}
                  </Content>
                </Wrapper>
              </MobileSidebarProvider>
            </ThemeProvider>
          </NextIntlClientProvider>
        </ClerkProvider>
      </body>
    </html>
  );
}
